// =======================
// Tools/Mixins
// Thanks to @sutterlity
// https://github.com/sutter/POPY-Starter-integration-web/blob/master/scss/tools/_mixins.scss
// =======================

// -----------------------
// == Base
// -----------------------

// = Inline-block
// -----------------------------
@mixin inline-block ($haslayout : true){
	display: inline-block;
	vertical-align: middle;
	@if $haslayout == true {
		.lt-ie8 & {
			display: inline;
			zoom: 1;
		}
	}
}

// = Clearfix
// -----------------------------
@mixin clearfix ($haslayout : true) {
	@if $haslayout == true {
		.lt-ie8 & {
			zoom: 1;
		}
	}
	&:before, &:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both
	}
}

// = Opacity
// -----------------------------
@mixin opacity($opacity) {
    filter: unquote("progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})");
    opacity: $opacity;

    /* Hack IE6 */
    .lt-ie7 & {
        filter : alpha(opacity=#{round($opacity * 100)});
        zoom: 1;
    }
}

// = Placeholder
// -----------------------------
@mixin placeholder($color : $clr-mixin-placeholder) {
	&::-webkit-input-placeholder {
		color: $color;
	}
	&:-moz-placeholder {
		color: $color;
	}
	&:-ms-input-placeholder {
		color: $color;
	}
}

// = Selection
// -----------------------------
$prefixes: ("-webkit-","-moz-", "");
@mixin selection($color, $background) {
	@each $prefix in $prefixes {
		::#{$prefix}selection {
			color: $color;
			background: $background;
			text-shadow:none;
		}
	}
}

// = Position
// -----------------------------
@mixin position ($position: relative, $coordinates: 0 0 0 0) {
	@if type-of($position) == list {
		$coordinates: $position;
		$position: relative;
	}
	$top: nth($coordinates, 1);
	$right: nth($coordinates, 2);
	$bottom: nth($coordinates, 3);
	$left: nth($coordinates, 4);
	position: $position;
	@if $top == auto {
		top: $top;
	}
	@else if not(unitless($top)) {
		top: $top;
	}
	@if $right == auto {
		right: $right;
	}
	@else if not(unitless($right)) {
		right: $right;
	}
	@if $bottom == auto {
		bottom: $bottom;
	}
	@else if not(unitless($bottom)) {
		bottom: $bottom;
	}
	@if $left == auto {
		left: $left;
	}
	@else if not(unitless($left)) {
		left: $left;
	}
}

@mixin center-v($height) {
  position: absolute; top: 50%; margin-top: -($height/2);
}

@mixin center-h($width) {
  position: absolute; left: 50%; margin-left: -($width/2);
}

// ----------------------------------------------------------
// == CSS3
// ----------------------------------------------------------
@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
            #{$property}:$value;
}

@mixin vendor-value($property, $value){
  #{$property}:-webkit-#{$value};
     #{$property}:-moz-#{$value};
      #{$property}:-ms-#{$value};
          #{$property}:#{$value};
}

// = Prefixer
// -----------------------------
$prefix-for-webkit:    true !default;
$prefix-for-mozilla:   true !default;
$prefix-for-microsoft: true !default;
$prefix-for-opera:     true !default;
$prefix-for-spec:      true !default;

@mixin prefixer ($property, $value, $prefixes) {
	@each $prefix in $prefixes {

		@if $prefix == webkit and $prefix-for-webkit == true {
			-webkit-#{$property}: $value;
		}
		@else if $prefix == moz and $prefix-for-mozilla == true {
			-moz-#{$property}: $value;
		}
		@else if $prefix == ms and $prefix-for-microsoft == true {
			-ms-#{$property}: $value;
		}
		@else if $prefix == o and $prefix-for-opera == true {
			-o-#{$property}: $value;
		}
		@else if $prefix == spec and $prefix-for-spec == true {
			#{$property}: $value;
		}
		@else {
			@warn "Unrecognized prefix: #{$prefix}";
		}
	}
}

@mixin disable-prefix-for-all() {
	$prefix-for-webkit:    false;
	$prefix-for-mozilla:   false;
	$prefix-for-microsoft: false;
	$prefix-for-opera:     false;
	$prefix-for-spec:      false;
}

// = Border-radius
// -----------------------------
@mixin border-radius($radius : 5px) {
	@include prefixer(border-radius, $radius, moz spec)
}

@mixin border-top-radius($radius : 5px) {
	@include prefixer(border-top-left-radius, $radius, moz spec);
	@include prefixer(border-top-right-radius, $radius, moz spec);
}

@mixin border-bottom-radius($radius : 5px) {
	@include prefixer(border-bottom-left-radius, $radius, moz spec);
	@include prefixer(border-bottom-right-radius, $radius, moz spec);
}

@mixin border-left-radius($radius : 5px) {
	@include prefixer(border-top-left-radius, $radius, moz spec);
	@include prefixer(border-bottom-left-radius, $radius, moz spec);
}

@mixin border-right-radius($radius : 5px) {
	@include prefixer(border-top-right-radius, $radius, moz spec);
	@include prefixer(border-bottom-right-radius, $radius, moz spec);
}

// = Transition
// -----------------------------
@mixin transition ($transition : all .3s ease-in-out) {
	@include prefixer(transition, $transition, webkit moz ms o spec);
}

// = Box-sizing
// -----------------------------
@mixin box-sizing ($box : border-box) {
	//  content-box | border-box | inherit
	@include prefixer(box-sizing, $box, webkit moz spec);
}

// = Filter
// -----------------------------
@mixin filter (
	$filter-1,
	$filter-2 : false,
	$filter-3 : false,
	$filter-4 : false,
	$filter-5 : false,
	$filter-6 : false,
	$filter-7 : false,
	$filter-8 : false,
	$filter-9 : false,
	$filter-10: false
	) {
	$filter : compact($filter-1, $filter-2, $filter-3, $filter-4, $filter-5, $filter-6, $filter-7, $filter-8, $filter-9, $filter-10);
	@include prefixer(filter, $filter, webkit moz spec);
}

// = UL list inline
// -----------------------------
@mixin ul-list-inline() {
    list-style: none;
    margin: 0;
    padding: 0;

    li {
        @include inline-block();
    }
}

// keyframes
@mixin keyframe ($animation-name){
    @-webkit-keyframes $animation-name{
        @content;
    }

    @-moz-keyframes $animation-name{
        @content;
    }

    @-ms-keyframes $animation-name{
        @content;
    }

    @-o-keyframes $animation-name{
        @content;
    }

    @keyframes $animation-name{
        @content;
    }
}

//gradients
@mixin vertical-gradient($fromColor, $toColor, $fromPosition: 0, $toPosition: 100%){
  background-color: $fromColor; /*Old browsers*/
  background: -moz-linear-gradient(top, $fromColor $fromPosition $toColor $toPosition); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop($fromPosition, $fromColor), color-stop($toPosition, $toColor)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, $fromColor $fromPosition, $toColor $toPosition); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, $fromColor $fromPosition, $toColor $toPosition); /* Opera 11.10+ */
  background: -ms-linear-gradient(top, $fromColor $fromPosition, $toColor $toPosition); /* IE10+ */
  background: linear-gradient(to bottom, $fromColor $fromPosition, $toColor $toPosition); /* W3C */
}

@mixin horizontal-gradient($fromColor, $toColor, $fromPosition: 0, $toPosition: 100%){
  background-color: $toColor; /*Old browsers*/
  background: -moz-linear-gradient(left, $fromColor $fromPosition, $toColor $toPosition); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, right top, color-stop($fromPosition, $fromColor), color-stop($toPosition, $toColor)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(left, $fromColor $fromPosition, $toColor $toPosition); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(left, $fromColor $fromPosition, $toColor $toPosition); /* Opera 11.10+ */
  background: -ms-linear-gradient(left, $fromColor $fromPosition, $toColor $toPosition); /* IE10+ */
  background: linear-gradient(to right, $fromColor $fromPosition, $toColor $toPosition); /* W3C */
}

@mixin radial-gradient($fromColor, $toColor, $fromPosition: 0, $toPosition: 100%, $start: center center){ //'center center' instead of '50% 50%' -> IE8
    background: #f0f9ff; /* Old browsers */
    background: -moz-radial-gradient($start, ellipse cover, $fromColor $fromPosition, $toColor $toPosition); /* FF3.6+ */
    background: -webkit-gradient(radial, $start $start, 0px, $start $start, 100%, color-stop($fromPosition, $fromColor), color-stop($toPosition, $toColor)); /* Chrome,Safari4+ */
    background: -webkit-radial-gradient($start, ellipse cover, $fromColor $fromPosition, $toColor $toPosition); /* Chrome10+,Safari5.1+ */
    background: -o-radial-gradient($start, ellipse cover, $fromColor $fromPosition, $toColor $toPosition); /* Opera 12+ */
    background: -ms-radial-gradient($start, ellipse cover, $fromColor $fromPosition, $toColor $toPosition); /* IE10+ */
    background: radial-gradient(ellipse at $start, $fromColor $fromPosition, $toColor $toPosition); /* W3C */
    //filter: progid:DXImageTransform.Microsoft.gradient(startColorStr=#{$fromColor}, EndColorStr=#{$toColor}, GradientType=0); /*old IE's - vertical*/
}

@mixin diagonal-gradient($deg, $fromColor, $toColor, $middleColor: transparent, $fromPosition: 0, $toPosition: 100%){ 
  background: $toColor; /* Old browsers */
  background: -moz-linear-gradient($deg,  $fromColor $fromPosition, $middleColor 50%, $toColor $toPosition); /* FF3.6+ */
  background: -webkit-gradient(linear, left bottom, right top, color-stop($fromPosition, $fromColor), color-stop($middleColor 50%), color-stop($toPosition, $toColor)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient($deg, $fromColor $fromPosition, $middleColor 50%, $toColor $toPosition); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient($deg, $fromColor $fromPosition, $middleColor 50%, $toColor $toPosition); /* Opera 11.10+ */
  background: -ms-linear-gradient($deg, $fromColor $fromPosition, $middleColor 50%, $toColor $toPosition); /* IE10+ */
  background: linear-gradient($deg, $fromColor $fromPosition, $middleColor 50%, $toColor $toPosition); /* W3C */
}

//sticky footer
@mixin sticky-footer($footer-height, $root-selector: unquote("#root"), $root-footer-selector: unquote("#root_footer"), $footer-selector: unquote("#footer")) {
  html, body { height: 100%; width: 100%; }
  #wrap, #page-wrap { height: 100%; }
  #{$root-selector} {
    clear: both;
    min-height: 100%;
    height: auto !important;
    height: 100%;
    padding-bottom: $footer-height;
    margin-bottom: -$footer-height;
    @if ($root-footer-selector != "") {
      #{$root-footer-selector} { height: $footer-height; } }
    }
  #{$footer-selector} {
    clear: both;
    position: relative;
    //min-height: $footer-height;
  }
}